# -*- coding: utf-8 -*-
"""
Module containing functions implemented from equations presentend in the SR5-05(2016)
suplementary release of IAPWSIF97.

List of functions and code structure:
    
    Sub Regions, region 3
        t_3ab(p)
        t_3cd(p)
        t_3ef(p)
        t_3gh(p)
        t_3ij(p)
        t_3jk(p)
        t_3mn(p)
        t_3op(p)
        t_3qu(p)
        t_3rx(p)
        t_3uv(p)
        t_3wx(p)
    Determine sub region
        find_region(p,T)
    Properties, region 3
        v_pt(p,T)
       
@author: Christoffer Rappmann, christoffer.rappmann@gmail.com
"""
import numpy as np
from iapwsif97_main import t_sat_p_r4 as t_97sat

def t_3ab(p):
    """
    The equation T_3ab(p) approximates the critical isentrope from 25 MPa to 100 MPa and
    represents the boundary equation between subregion 3a and subregion 3d. 

    Parameters
    ----------
    p : TYPE
        DESCRIPTION.

    Returns
    -------
    TYPE
        DESCRIPTION.

    """
    t_star = 1 #K
    p_star = 1 * 10**6 # Pa
    
    pi = p/p_star
    
    I = [0, 1, 2, -1, -2]
    n_array = [ 0.154793642129415*10**4,
         -0.187661219490113*10**3,
          0.213144632222113*10**2,
         -0.191887498864292*10**4,
          0.918419702359447*10**3]
    
    teta = 0
    for i,n in zip(I, n_array):
        teta += n * (np.log(pi))**i
        
    return teta*t_star
        
def t_3cd(p):
    """

    Parameters
    ----------
    p : TYPE
        DESCRIPTION.

    Returns
    -------
    TYPE
        DESCRIPTION.

    """
    t_star = 1 #K
    p_star = 1 * 10**6 # Pa
    
    pi = p/p_star
    
    I = [0, 1, 2, 3]
    n_array = [ 0.585276966696349*10**3,
                0.278233532206915*10**1,
               -0.127283549295878*10**-1,
                0.159090746562729*10**-3]
    
    teta = 0
    for i,n in zip(I, n_array):
        teta += n * pi**i
        
    return teta*t_star

def t_3ef(p):
    t_star = 1 #K
    p_star = 1 * 10**6 # Pa
    
    pi = p/p_star
    
    d_teta_sat_d_p = 3.727888004
    
    return t_star * (d_teta_sat_d_p * (pi - 22.064) + 647.096)

def t_3gh(p):
    t_star = 1 #K
    p_star = 1 * 10**6 # Pa
    
    pi = p/p_star
    
    I = [0, 1, 2, 3, 4]
    n_array = [-0.249284240900418*10**5,
                0.428143584791546*10**4,
               -0.269029173140130*10**3,
                0.751608051114157*10**1,
               -0.787105249910383*10**-1]
    
    teta = 0
    for i,n in zip(I, n_array):
        teta += n * pi**i
        
    return teta*t_star

def t_3ij(p):
    t_star = 1 #K
    p_star = 1 * 10**6 # Pa
    
    pi = p/p_star
    
    I = [0, 1, 2, 3, 4]
    n_array = [ 0.584814781649163*10**3,
               -0.616179320924617,
                0.260763050899562,
               -0.587071076864459*10**-2,
                0.515308185433082*10**-4]
    
    teta = 0
    for i,n in zip(I, n_array):
        teta += n * pi**i
        
    return teta*t_star

def t_3jk(p):
    t_star = 1 #K
    p_star = 1 * 10**6 # Pa
    
    pi = p/p_star
    
    I = [0, 1, 2, 3, 4]
    n_array = [ 0.617229772068439*10**3,
               -0.770600270141675*10**1,
                0.697072596851896,
               -0.157391839848015*10**-1,
                0.137897492684194*10**-3]
    
    teta = 0
    for i,n in zip(I, n_array):
        teta += n * pi**i
        
    return teta*t_star

def t_3mn(p):
    t_star = 1 #K
    p_star = 1 * 10**6 # Pa
    
    pi = p/p_star
    
    I = [0, 1, 2, 3]
    n_array = [ 0.535339483742384*10**3,
                0.761978122720128*10,
               -0.158365725441648,
                0.192871054508108*10**-2]
    
    teta = 0
    for i,n in zip(I, n_array):
        teta += n * pi**i
        
    return teta*t_star

def t_3op(p):
    t_star = 1 #K
    p_star = 1 * 10**6 # Pa
    
    pi = p/p_star
    
    I = [0, 1, 2, -1, -2]
    n_array = [ 0.969461372400213*10**3,
               -0.332500170441278*10**3,
                0.642859598466067*10**2,
                0.773845935768222*10**3,
               -0.152313732937084*10**4]
    
    teta = 0
    for i,n in zip(I, n_array):
        teta += n * (np.log(pi))**i
        
    return teta*t_star

def t_3qu(p):
    t_star = 1 #K
    p_star = 1 * 10**6 # Pa
    
    pi = p/p_star
    
    I = [0, 1, 2, 3]
    n_array = [ 0.565603648239126*10**3,
                0.529062258221222*10**1,
               -0.102020639611016,
                0.122240301070145*10**-2]
    
    teta = 0
    for i,n in zip(I, n_array):
        teta += n * pi**i
        
    return teta*t_star

def t_3rx(p):
    t_star = 1 #K
    p_star = 1 * 10**6 # Pa
    
    pi = p/p_star
    
    I = [0, 1, 2, 3]
    n_array = [ 0.584561202520006*10**3,
               -0.102961025163669*10**1,
                0.243293362700452,
               -0.294905044740799*10**-2]
    
    teta = 0
    for i,n in zip(I, n_array):
        teta += n * pi**i
        
    return teta*t_star

# Regions very close to the critical point

def t_3uv(p):
    t_star = 1 #K
    p_star = 1 * 10**6 # Pa
    
    pi = p/p_star
    
    I = [0, 1, 2, 3]
    n_array = [0.528199646263062*10**3,
               0.890579602135307*10,
               -.222814134903755,
               0.286791682263697*10**-2]
    
    teta = 0
    for i,n in zip(I, n_array):
        teta += n * pi**i
        
    return teta*t_star

def t_3wx(p):
    """

    Parameters
    ----------
    p : TYPE
        DESCRIPTION.

    Returns
    -------
    TYPE
        DESCRIPTION.

    """
    t_star = 1 #K
    p_star = 1 * 10**6 # Pa
    
    pi = p/p_star
    
    I = [0, 1, 2, -1, -2]
    n_array = [ 0.728052609145380*10,
               0.973505869861952*10**2,
               0.147370491183191*10**2,
               0.329196213998375*10**3,
               0.873371668682417*10**3]
    
    teta = 0
    for i,n in zip(I, n_array):
        teta += n * (np.log(pi))**i
        
    return teta*t_star

"""
Determine applicable region
"""

def find_region(p,T):
    """
    The IAPWS Industrial Formulation 1997 Supp-VPT3-2016
    consists of a set of equations for different regions
    which cover the following range of validity (Within region 3 of IAPWS-IF97):
    623.15 K <= T <= (eq. 6 IAPWS-IF97) K  and (eq. 5 IAPWS-IF97) <= p <= 100 MPa
        
    This method determine the applicable region given conditions p,T
    
    Implements table 2 of Supp-VPT3-2016

    Parameters
    ----------
    p : double      Pressure (Pa).
    T : double      Temperature (K).

    Returns
    -------
    region : int    Applicable region (-)
    """
    
    # Pressure values of table 2
    #                          0          1         2         3           4         5           6, psat 643.15 K (region 4 if97)    7           8                        9 psat 623.15 K (region 4 if97)
    pressure_table = np.array([100*10**6, 40*10**6, 25*10**6, 23.5*10**6, 23*10**6, 22.5*10**6, 21043367.31897525,                  20.5*10**6, 1.900881189173929*10**7, 16529164.252604477])
    
    # Pressure values of table 10, near critical point
    #                                        0,         1,            2,            3,                 4,                 5. psat 643.15 K (region 4 if97)
    pressure_table_near_critical = np.array([22.5*10**6, 22.11*10**6, 22.064*10**6, 2.193161551*10**7, 2.190096265*10**7, 21043367.31897525])
    
    region = None
    
    if p <= pressure_table[0] and p > pressure_table[1]:
        # Region a or b
        if T <= t_3ab(p):
            # Region a
            region = 'a'
        else:
            # Region b
            region = 'b'
            
    elif p <= pressure_table[1] and p > pressure_table[2]: 
        # Region c,d,e,f
        if T <= t_3cd(p):
            # Region c
            region = 'c'
        elif T <= t_3ab(p):
            # Region d
            region = 'd'
        elif T <= t_3ef(p):
            # Region e
            region = 'e'
        else:
            # Region f
            region = 'f'
            
    elif p <= pressure_table[2] and p > pressure_table[3]:
        # Region c,g,h,i,j,k
        if T <= t_3cd(p):
            # Region c
            region = 'c'
        elif T <= t_3gh(p):
            # Region g
            region = 'g'
        elif T <= t_3ef(p):
            # Region h
            region = 'h'
        elif T <= t_3ij(p):
            # Region i
            region = 'i'
        elif T <= t_3jk(p):
            # Region j
            region = 'j'
        else:
            # Region k
            region = 'k'
            
    elif p <= pressure_table[3] and p > pressure_table[4]:
        # Region c,l,h,i,j,k
        if T <= t_3cd(p):
            # Region c
            region = 'c'
        elif T <= t_3gh(p):
            # Region l
            region = 'l'
        elif T <= t_3ef(p):
            # Region h
            region = 'h'
        elif T <= t_3ij(p):
            # Region i
            region = 'i'
        elif T <= t_3jk(p):
            # Region j
            region = 'j'
        else:
            # Region k
            region = 'k'
                            
    elif p <= pressure_table[4] and p > pressure_table[5]:
        # Region c,l,m,n,o,p,j,k 
        if T <= t_3cd(p):
            # Region c
            region = 'c'
        elif T <= t_3gh(p):
            # Region l
            region = 'l'
        elif T <= t_3mn(p):
            # Region m
            region = 'm'
        elif T <= t_3ef(p):
            # Region n
            region = 'n'
        elif T <= t_3op(p):
            # Region o
            region = 'o'
        elif T <= t_3ij(p):
            # Region p
            region = 'p'
        elif T <= t_3jk(p):
            # Region j
            region = 'j'
        else:
            # Region k
            region = 'k'
            
    elif p <= pressure_table[5] and p > pressure_table[6]:
        # check if region near critical point.
        # region u,v,w,x,y,z
        # Super critical pressure region
        if p > pressure_table_near_critical[1]:
            
            # Region u, v, w, x
            if t_3qu(p) < T and T <= t_3uv(p):
                # Region u
                region = 'u'
            elif t_3uv(p) < T and T <= t_3ef(p):
                # Region v
                region = 'v'
            elif t_3ef(p) < T and T <= t_3wx(p):
                # Region w
                region = 'w'
            elif t_3wx(p) < T and T <= t_3rx(p):
                # Region x
                region = 'x'
                
        elif p > pressure_table_near_critical[2]:
            # Region u, x, y, z
            if t_3qu(p) < T and T <= t_3uv(p):
                # Region u
                region = 'u'
            elif t_3uv(p) < T and T <= t_3ef(p):
                # Region y
                region = 'y'
            elif t_3ef(p) < T and T <= t_3wx(p):
                # Region z
                region = 'z'
            elif t_3wx(p) < T and T <= t_3rx(p):
                # Region x
                region = 'x'
                
        # Sub critical pressure region
        elif T <= t_97sat(p):
            # Region u,y
            if p > pressure_table_near_critical[3]:
                if t_3qu(p) < T and T <= t_3uv(p):
                    # Region u
                    region = 'u'
                elif t_3uv(p) < T:
                    # Region y
                    region = 'y'
            elif pressure_table_near_critical[5] < p and p <= pressure_table_near_critical[3]:
                # Region u
                if t_3qu(p) < T:
                    # Region u
                    region = 'u'
                
        elif T >= t_97sat(p):
            # Region z,x
            if p > pressure_table_near_critical[4]:
                if T <= t_3wx(p):
                    # Region z
                    region = 'z'
                elif t_3wx(p) < T and T <= t_3rx(p):
                    # Region x
                    region = 'x'
            elif pressure_table_near_critical[5] < p and p <= pressure_table_near_critical[4]:
                # Region x
                if t_3rx(p) > T:
                    # Region x
                    region = 'x'
            
        # If not in near-critical region
        # Region c,q,r,k
        if region == None: # Check that a critical region has not been identified
            if T <= t_3cd(p):
                # Region c
                region = 'c'
            elif T <= t_3qu(p):
                # Region q
                region = 'q'
            elif T <= t_3jk(p):
                # Region r
                region = 'r'
            else:
                # Region k
                region = 'k'
            
    elif p <= pressure_table[6] and p > pressure_table[7]:
        # Region c,s,r,k
        if T <= t_3cd(p):
            # Region c
            region = 'c'
        elif T <= t_97sat(p):
            # Region s
            region = 's'
        elif T <= t_3jk(p):
            # Region r
            region = 'r'
        else:
            # Region k
            region = 'k'
            
    elif p <= pressure_table[7] and p > pressure_table[8]:
        # Region c,s,t 
        if T <= t_3cd(p):
            # Region c
            region = 'c'
        elif T <= t_97sat(p):
            # Region s
            region = 's'
        else:
            # Region t
            region = 't'
            
    elif p <= pressure_table[8] and p > pressure_table[9]:
        # Region c,t
        if T <= t_97sat(p):
            # Region c
            region = 'c'
        else:
            # Region t
            region = 't'
            
    else:
        # Out of range
        region = -1
        
    return region

"""
Backwards equation for v(pt) region 3a-t
Chapter 5.2
"""

def v_pt(p,T):
    
    # Determine region
    region = find_region(p,T)

    # reducing quantaties, table 4 and table 12
    #                   0       1           2       3   4       5       6       7       8           
    #                   v_star  p_star      T_star  N   a       b       c       d       e     
    x_star = np.array([[0.0024, 100*10**6,  760,    30, 0.085,  0.817,  1,      1,      1],
                       [0.0041, 100*10**6,  860,    32, 0.280,  0.779,  1,      1,      1],
                       [0.0022, 40*10**6,   690,    35, 0.259,  0.903,  1,      1,      1],
                       [0.0029, 40*10**6,   690,    38, 0.559,  0.939,  1,      1,      4],
                       [0.0032, 40*10**6,   710,    29, 0.587,  0.918,  1,      1,      1],
                       [0.0064, 40*10**6,   730,    42, 0.587,  0.891,  0.5,    1,      4],
                       [0.0027, 25*10**6,   660,    38, 0.872,  0.971,  1,      1,      4],
                       [0.0032, 25*10**6,   660,    29, 0.898,  0.983,  1,      1,      4],
                       [0.0041, 25*10**6,   660,    42, 0.910,  0.984,  0.5,    1,      4],
                       [0.0054, 25*10**6,   670,    29, 0.875,  0.964,  0.5,    1,      4],
                       [0.0077, 25*10**6,   680,    34, 0.802,  0.935,  1,      1,      1],
                       [0.0026, 24*10**6,   650,    43, 0.908,  0.989,  1,      1,      4],
                       [0.0028, 23*10**6,   650,    40, 1.000,  0.997,  1,      0.25,   1],
                       [0.0031, 23*10**6,   650,    39, 0.976,  0.997,  0,      0,      0],
                       [0.0034, 23*10**6,   650,    24, 0.974,  0.996,  0.5,    1,      1],
                       [0.0041, 23*10**6,   650,    27, 0.972,  0.997,  0.5,    1,      1],
                       [0.0022, 23*10**6,   650,    24, 0.848,  0.983,  1,      1,      4],
                       [0.0054, 23*10**6,   650,    27, 0.874,  0.982,  1,      1,      1],
                       [0.0022, 21*10**6,   640,    29, 0.886,  0.990,  1,      1,      4],
                       [0.0088, 20*10**6,   650,    33, 0.803,  1.020,  1,      1,      1],
                       [0.0026, 23*10**6,   650,    38, 0.902,  0.988,  1,      1,      1],
                       [0.0031, 23*10**6,   650,    39, 0.960,  0.995,  1,      1,      1],
                       [0.0039, 23*10**6,   650,    35, 0.959,  0.995,  1,      1,      4],
                       [0.0049, 23*10**6,   650,    36, 0.910,  0.988,  1,      1,      1],
                       [0.0031, 22*10**6,   650,    20, 0.996,  0.994,  1,      1,      4],
                       [0.0038, 22*10**6,   650,    23, 0.993,  0.994,  1,      1,      4]])
    
    # Table A1.1-20, A2.1-6
    #                  1,   2,   3,   4,   5,   6,   7,   8,   9,   10,  11,  12,  13,  14,  15,  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43
    i_a1 = np.array([[-12, -12, -12, -10, -10, -10, -8,  -8,  -8,  -6,  -5,  -5,  -5,  -4,  -3,  -3, -3, -3, -2, -2, -2, -1, -1, -1,  0,  0,  1,  1,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [-12, -12, -10, -10, -8,  -6,  -6,  -6,  -5,  -5,  -5,  -4,  -4,  -4,  -3,  -3, -3, -3, -3, -2, -2, -2, -1, -1,  0,  0,  1,  1,  2,  3,  4,  4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [-12, -12, -12, -10, -10, -10, -8,  -8,  -8,  -6,  -5,  -5,  -5,  -4,  -4,  -3, -3, -2, -2, -2, -1, -1, -1,  0,  0,  0,  1,  1,  2,  2,  2,  2,  3,  3,  8,  0,  0,  0,  0,  0,  0,  0,  0],
                     [-12, -12, -12, -12, -12, -12, -10, -10, -10, -10, -10, -10, -10, -8,  -8,  -8, -8, -6, -6, -5, -5, -5, -5, -4, -4, -4, -3, -3, -2, -2, -1, -1, -1,  0,  0,  1,  1,  3,  0,  0,  0,  0,  0],
                     [-12, -12, -10, -10, -10, -10, -10, -8,  -8,  -8,  -6,  -5,  -4,  -4,  -3,  -3, -3, -2, -2, -2, -2, -1,  0,  0,  1,  1,  1,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [ 0,   0,   0,   0,   0,   0,   1,   1,   1,   1,   2,   2,   3,   3,   3,   4,  5,  5,  6,  7,  7,  10, 12, 12, 12, 14, 14, 14, 14, 14, 16, 16, 18, 18, 20, 20, 20, 22, 24, 24, 28, 32, 0],
                     [-12, -12, -12, -12, -12, -12, -10, -10, -10, -8,  -8,  -8,  -8,  -6,  -6,  -5, -5, -4, -3, -2, -2, -2, -2, -1, -1, -1,  0,  0,  0,  1,  1,  1,  3,  5,  6,  8,  10, 10, 0,  0,  0,  0,  0],
                     [-12, -12, -10, -10, -10, -10, -10, -10, -8,  -8,  -8,  -8,  -8,  -6,  -6,  -6, -5, -5, -5, -4, -4, -3, -3, -2, -1, -1,  0,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [ 0,   0,   0,   1,   1,   1,   1,   2,   3,   3,   4,   4,   4,   5,   5,   5,  7,  7,  8,  8,  10, 12, 12, 12, 14, 14, 14, 14, 18, 18, 18, 18, 18, 20, 20, 22, 24, 24, 32, 32, 36, 36, 0],
                     [ 0,   0,   0,   1,   1,   1,   2,   2,   3,   4,   4,   5,   5,   5,   6,   10, 12, 12, 14, 14, 14, 16, 18, 20, 20, 24, 24, 28, 28,  0,  0,  0,  0, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [-2,  -2,  -1,  -1,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,   1,   1,  1,  1,  2,  2,  2,  2,  2,  2,  5,  5,  5,  6,  6,  6,  6,  8,  10, 12, 0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [-12, -12, -12, -12, -12, -10, -10, -8,  -8,  -8,  -8,  -8,  -8,  -8,  -6,  -5, -5, -4, -4, -3, -3, -3, -3, -2, -2, -2, -1, -1, -1,  0,  0,  0,  0,  1,  1,  2,  4,  5,  5,  6,  10, 10, 14],
                     [ 0,   3,   8,   20,  1,   3,   4,   5,   1,   6,   2,   4,   14,  2,   5,   3,  0,  1,  1,  1,  28, 2,  16, 0,  5,  0,  3,  4,  12, 16, 1,  8,  14, 0,  2,  3,  4,  8,  14, 24, 0,  0,  0],
                     [ 0,   3,   4,   6,   7,   10,  12,  14,  18,  0,   3,   5,   6,   8,   12,  0,  3,  7,  12, 2,  3,  4,  2,  4,  7,  4,  3,  5,  6,  0,  0,  3,  1,  0,  1,  0,  1,  0,  1,  0,  0,  0,  0],
                     [ 0,   0,   0,   2,   3,   4,   4,   4,   4,   4,   5,   5,   6,   7,   8,   8,  8,  10, 10, 14, 14, 20, 20, 24, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [ 0,   0,   0,   0,   1,   2,   3,   3,   4,   6,   7,   7,   8,   10,  12,  12, 12, 14, 14, 14, 16, 18, 20, 22, 24, 24, 36, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [-12, -12, -10, -10, -10, -10, -8,  -6,  -5,  -5,  -4,  -4,  -3,  -2,  -2,  -2, -2, -1, -1, -1,  0,  1,  1,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [-8,  -8,  -3 , -3,  -3,  -3,  -3,   0,   0,   0,   0,   3,   3,   8,   8,   8,  8,  10, 10, 10, 10, 10, 10, 10, 10, 12, 14, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [-12, -12, -10, -8,  -6,  -5,  -5,  -4,  -4,  -3,  -3,  -2,  -1,  -1,  -1,   0,  0,  0,  0,  1,  1,  3,  3,  3,  4,  4,  4,  5,  14, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [ 0,   0,   0,   0,   1,   1,   2,   2,   2,   3,   3,   4,   4,   7,   7,   7,  7,  7,  10, 10, 10, 10, 10, 18, 20, 22, 22, 24, 28, 32, 32, 32, 36, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [-12, -10, -10, -10, -8,  -8,  -8,  -6,  -6,  -5,  -5,  -5,  -3,  -1,  -1,  -1, -1,  0,  0,  1,  2,  2,  3,  5,  5,  5,  6,  6,  8,  8,  10, 12, 12, 12, 14, 14, 14, 14, 0,  0,  0,  0,  0],
                     [-10, -8,  -6,  -6,  -6,  -6,  -6,  -6,  -5,  -5,  -5,  -5,  -5,  -5,  -4,  -4, -4, -4, -3, -3, -3, -2, -2, -1, -1,  0,  0,  0,  1,  1,  3,  4,  4,  4,  5,  8,  10, 12, 14, 0,  0,  0,  0],
                     [-12, -12, -10, -10, -8,  -8,  -8,  -6,  -6,  -6,  -6,  -5,  -4,  -4,  -3,  -3, -2, -2, -1, -1, -1,  0,  0,  1,  2,  2,  3,  3,  5,  5,  5,  8,  8,  10, 10, 0,  0,  0,  0,  0,  0,  0,  0],
                     [-8,  -6,  -5,  -4,  -4,  -4,  -3,  -3,  -1,   0,   0,   0,   1,   1,   2,   3,  3,  3,  4,  5,  5,  5,  6,  8,  8,  8,  8,  10, 12, 12, 12, 12, 14, 14, 14, 14, 0,  0,  0,  0,  0,  0,  0],
                     [ 0,   0,   0,   0,   1,   2,   2,   2,   2,   3,   3,   3,   4,   4,   5,   5,  8,  8,  10, 12, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [-8,  -6,  -5,  -5,  -4,  -4,  -4,  -3,  -3,  -3,  -2,  -1,   0,   1,   2,   3,  3,  6,  6,  6,  6,  8,  8,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0]])
    
    #                  1,   2,   3,   4,   5,   6,   7,   8,   9,   10,  11,  12,  13,  14,  15,  16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43
    j_a1 = np.array([[ 5,   10,  12,  5,   10,  12,  5,   8,   10,  1,   1,   5,   10,  8,   0,   1,  3,  6,  0,  2,  3,  0,  1,  2,  0,  1,  0,  2,  0,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [ 10,  12,  8,   14,  8,   5,   6,   8,   5,   8,   10,  2,   4,   5,   0,   1,  2,  3,  5,  0,  2,  5,  0,  2,  0,  1,  0,  2,  0,  2,  0,  1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [ 6,   8,   10,  6,   8,   10,  5,   6 ,  7,   8,   1,   4,   7,   2,   8,   0,  3,  0,  4,  5,  0,  1,  2,  0,  1,  2,  0,  2,  0,  1,  3,  7,  0,  7,  1,  0,  0,  0,  0,  0,  0,  0,  0],
                     [ 4,   6,   7,   10,  12,  16,  0,   2,   4,   6,   8,   10,  14,  3,   7,   8,  10, 6,  8,  1,  2,  5,  7,  0,  1,  7,  2,  4,  0,  1,  0,  1,  5,  0,  2,  0,  6,  0,  0,  0,  0,  0,  0],
                     [ 14,  16,  3,   6,   10,  14,  16,  7,   8,   10,  6,   6,   2,   4,   2,   6,  7,  0,  1,  3,  4,  0,  0,  1,  0,  4,  6,  0,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [-3,  -2,  -1,   0,   1,   2,  -1,   1,   2,   3,   0,   1,  -5,  -2,   0,  -3, -8,  1, -6, -4,  1, -6, -10,-8, -4, -12,-10,-8, -6, -4, -10,-8, -12,-10,-12,-10,-6, -12,-12,-4, -12,-12, 0],
                     [ 7,   12,  14,  18,  22,  24,  14,  20,  24,  7,   8,   10,  12,  8,   22,  7,  20, 22, 7,  3,  5,  14, 24, 2,  8,  18, 0,  1,  2,  0,  1,  3,  24, 22, 12, 3,  0,  6,  0,  0,  0,  0,  0],
                     [ 8,   12,  4,   6,   8,   10,  14,  16,  0,   1,   6,   7,   8,   4,   6,   8,  2,  3,  4,  2,  4,  1,  2,  0,  0,  2,  0,  0,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [ 0,   1,   10, -4,  -2,  -1,   0,   0,  -5,   0,  -3,  -2,  -1,  -6,  -1,   12,-4, -3, -6,  10,-8, -12,-6, -4, -10,-8, -4,  5, -12,-10,-8, -6,  2, -12,-10,-12,-12,-8, -10,-5, -10,-8,  0],
                     [-1,   0,   1,  -2,  -1,   1,  -1,   1,  -2,  -2,   2,  -3,  -2,   0,   3,  -6, -8, -3, -10,-8, -5, -10,-12,-12,-10,-12,-6, -12,-5,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [ 10,  12, -5,   6,  -12, -6,  -2,  -1,   0,   1,   2,   3,   14, -3,  -2,   0,  1,  2, -8, -6, -3, -2,  0,  4, -12,-6, -3, -12,-10,-8, -5, -12,-12,-10, 0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [ 14,  16,  18,  20,  22,  14,  24,  6,   10,  12,  14,  18,  24,  36,  8,   4,  5,  7,  16, 1,  3,  18, 20, 2,  3,  10, 0,  1,  3,  0,  1,  2,  12, 0,  16, 1,  0,  0,  1,  14, 4,  12, 10],
                     [ 0,   0,   0,   2,   5,   5,   5,   5,   6,   6,   7,   8,   8,   10,  10,  12, 14, 14, 18, 20, 20, 22, 22, 24, 24, 28, 28, 28, 28, 28, 32, 32, 32, 36, 36, 36, 36, 36, 36, 36, 0,  0,  0],
                     [-12, -12, -12, -12, -12, -12, -12, -12, -12, -10, -10, -10, -10, -10, -10, -8, -8, -8, -8, -6, -6, -6, -5, -5, -5, -4, -3, -3, -3, -2, -1, -1,  0,  1,  1,  2,  4,  5,  6,  0,  0,  0,  0],
                     [-12, -4,  -1,  -1,  -10, -12, -8,  -5,  -4,  -1,  -4,  -3,  -8,  -12, -10, -8, -4, -12,-8, -12,-8, -12,-10,-12, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [-1,   0,   1,   2,   1,  -1,  -3,   0,  -2,  -2,  -5,  -4,  -2,  -3,  -12, -6, -5, -10,-8, -3, -8, -8, -10,-10,-12,-8, -12, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [ 10,  12,  6,   7,   8,   10,  8,   6,   2,   5,   3,   4,   3,   0,   1,   2,  4,  0,  1,  2,  0,  0,  1,  3,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [ 6,   14, -3,   3,   4,   5,   8,  -1,   0,   1,   5,  -6,  -2,  -12, -10, -8, -5, -12,-10,-8, -6, -5, -4, -3, -2, -12,-12, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [ 20,  24,  22,  14,  36,  8,   16,  6,   32,  3,   8,   4,   1,   2,   3,   0,  1,  4,  28, 0,  32, 0,  1,  2,  3,  18, 24, 4,  24, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [ 0,   1,   4,   12,  0,   10,  0,   6,   14,  3,   8,   0,   10,  3,   4,   7,  20, 36, 10, 12, 14, 16, 22, 18, 32, 22, 36, 24, 28, 22, 32, 36, 36, 0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [ 14,  10,  12,  14,  10,  12,  14,  8,   12,  4,   8,   12,  2,  -1,   1,   12, 14,-3,  1, -2,  5,  10,-5, -4,  2,  3, -5,  2, -8,  8, -4, -12,-4,  4, -12,-10,-6,  6,  0,  0,  0,  0,  0],
                     [-8,  -12, -12, -3,   5,   6,   8,   10,  1,   2,   6,   8,   10,  14, -12, -10,-6,  10,-3,  10, 12, 2,  4, -2,  0, -2,  6,  10,-12,-10, 3, -6,  3,  10, 2, -12,-2, -3,  1,  0,  0,  0,  0],
                     [ 8,   14, -1,   8,   6,   8,   14, -4,  -3,   2,   8,  -10, -1,   3,  -10,  3,  1,  2, -8, -4,  1, -12, 1, -1, -1,  2, -12,-5, -10,-8, -6, -12,-10,-12,-8,  0,  0,  0,  0,  0,  0,  0,  0],
                     [ 14,  10,  10,  1,   2,   14, -2,   12,  5,   0,   4,   10, -10, -1,   6,  -12, 0,  8,  3, -6, -2,  1,  1, -6, -3,  1,  8, -8, -10,-8, -5, -4, -12,-10,-8, -6,  0,  0,  0,  0,  0,  0,  0],
                     [-3,   1,   5,   8,   8,  -4,  -1,   4,   5,  -8,   4,   8,  -6,   6,  -2,   1, -8, -2, -5, -8,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     [ 3,   6,   6,   8,   5,   6,   8,  -2,   5,   6,   2,  -6,   3,   1,   6,  -6, -2, -6, -5, -4, -1, -8, -4,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],])
    
    n_a1 = np.array([[ 0.110879558823853*10**-2, 0.572616740810616*10**3,   -0.767051948380852*10**5,
                      -0.253321069529674*10**-1, 0.628008049345689*10**4,    0.234105654131876*10**6,
                       0.216867826045856,       -0.156237904341963*10**3,   -0.269893956176613*10**5,
                      -0.180407100085505*10**-3, 0.116732227668261*10**-2,   0.266987040856040*10**2,
                       0.282776617243286*10**5, -0.242431520029523*10**4,    0.435217323022733*10**-3,
                      -0.122494831387441*10**-1, 0.179357604019989*10**1,    0.442729521058314*10**2,
                      -0.593223489018342*10**-2, 0.453186261685774,          0.135825703129140*10,
                       0.408748415856745*10**-1, 0.474686397863312,          0.118646814997915*10,
                       0.546987265727549,        0.195266770452643,         -0.502268790869663*10**-1,
                      -0.369645308193377,        0.633828037528420*10**-2,   0.797441793901017*10**-1,
                       0,  0,  0,  
                       0,  0,  0,  
                       0,  0,  0,  
                       0,  0,  0,  
                       0],
                     
                     [-0.827670470003621*10**-1, 0.416887126010565*10**2,    0.483651982197059*10**-1, 
                      -0.291032084950276*10**5, -0.111422582236948*10**3,   -0.202300083904014*10**-1,
                       0.294002509338515*10**3,  0.140244997609658*10**3,   -0.344384158811459*10**3,
                       0.361182452612149*10**3, -0.140699677420738*10**4,   -0.202023902676481*10**-2,
                       0.171346792457471*10**3, -0.425597804058632*10**1,    0.691346085000334*10**-5,
                       0.151140509678925*10**-2,-0.416375290166236*10**-1,  -0.413754957011042*10**2,
                      -0.506673295721637*10**2, -0.572212965569023*10**-3,   0.608817368401785*10,
                       0.239600660256161*10**2,  0.122261479925384*10**-1,   0.216356057692938*10,
                       0.398198903368642,       -0.116892827834085,         -0.102845919373532,
                      -0.492676637589284,        0.655540456406790*10**-1,  -0.240462535078530,
                      -0.269798180310075*10**-1, 0.128369435967012,
                       0,  0,  0,  
                       0,  0,  0,  
                       0,  0,  0,  
                       0,  0],
                     
                     [ 0.311967788763030*10,     0.276713458847564*10**5,    0.322583103403269*10**8,
                      -0.342416065095363*10**3, -0.899732529907377*10**6,   -0.793892049821251*10**8,
                       0.953193003217388*10**2,  0.229784742345072*10**4,    0.175336675322499*10**6,
                       0.791214365222792*10**7,  0.319933345844209*10**-4,  -0.659508863555767*10**2,
                      -0.833426563212851*10**6,  0.645734680583292*10**-1,  -0.382031020570813*10**7,
                       0.406398848470079*10**-4, 0.310327498492008*10**2,   -0.892996718483724*10**-3,
                       0.234604891591616*10**3,  0.377515668966951*10**4,    0.158646812591361*10**-1,
                       0.707906336241843,        0.126016225146570*10**2,    0.736143655772152,
                       0.676544268999101,       -0.178100588189137*10**2,   -0.156531975531713,
                       0.117707430048158*10**2,  0.840143653860447*10**-1,  -0.186442467471949,
                      -0.440170203949645*10**2,  0.123290423502494*10**7,   -0.240650039730845*10**-1,
                      -0.107077716660869*10**7,  0.438319858566475*10**-1,  
                       0,  0,  0,  
                       0,  0,  0,  
                       0,  0],
                     
                     [-0.452484847171645*10**-9, 0.315210389538801*10**-4,  -0.214991352047545*10**-2,
                       0.508058874808345*10**3, -0.127123036845932*10**8,    0.115371133120497*10**13,
                      -0.197805728776273*10**-15,0.241554806033972*10**-10, -0.156481703640525*10**-5,
                       0.277211346836625*10**-2,-0.203578994462286*10**2,    0.144369489909053*10**7,
                      -0.411254217946539*10**11, 0.623449786243773*10**-5,  -0.221774281146038*10**2,
                      -0.689315087933158*10**5, -0.195419525060713*10**8,    0.316373510564015*10**4,
                       0.224040754426988*10**7, -0.436701347922356*10**-5,  -0.404213852833996*10**-3,
                      -0.348153203414663*10**3, -0.385294213555289*10**6,    0.135203700099403*10**-6,
                       0.134648383271089*10**-3, 0.125031835351736*10**6,    0.968123678455841*10**-1,
                       0.225660517512438*10**3, -0.190102435341872*10**-3,  -0.299628410819229*10**-1,
                       0.500833915372121*10**-2, 0.387842482998411,         -0.138535367777182*10**4,
                       0.870745245971773,        0.171946252068742*10,      -0.326650121426383*10**-1,
                       0.498044171727877*10**4,  0.551478022765087*10**-2,
                       0,  0,  0,  
                       0,  0],
                     
                     [ 0.715815808404721*10**9, -0.114328360753449*10**12,   0.376531002015720*10**-11,
                      -0.903983668691157*10**-4, 0.665695908836252*10**6,    0.535364174960127*10**10,
                       0.794977402335603*10**11, 0.922230563421437*10**2,   -0.142586073991215*10**6,
                      -0.111796381424162*10**7,  0.896121629640760*10**4,   -0.669989239070491*10**4,
                       0.451242538486834*10**-2,-0.339731325977713*10**2,   -0.120523111552278*10,
                       0.475992667717124*10**5, -0.266627750390341*10**6,   -0.153314954386524*10**-3,
                       0.305638404828265,        0.123654999499486*10**3,   -0.104390794213011*10**4,
                      -0.157496516174308*10**-1, 0.685331118940253,          0.178373462873903*10,
                      -0.544674124878910,     0.204529931318843*10**4,   -0.228342359328752*10**5,
                       0.413197481515899,       -0.341931835910405*10**2,
                       0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     
                     [-0.251756547792325*10**-7, 0.601307193668763*10**-5,  -0.100615977450049*10**-2,
                       0.999969140252192,        0.214107759236486*10,      -0.165175571959086*10**2,
                      -0.141987303638727*10**-2, 0.269251915156554*10,       0.349741815858722*10**2,
                      -0.300208695771783*10**2, -0.131546288252539*10,      -0.839091277286169*10,
                       0.181545608337015*10**-9,-0.591099206478909*10**-3,   0.152115067087106*10,
                       0.252956470663225*10**-4, 0.100726265203786*10**-14, -0.149774533860650*10,
                      -0.793940970562969*10**-9,-0.150290891264717*10**-3,   0.151205531275133*10,
                       0.470942606221652*10**-5, 0.195049710391712*10**-12, -0.911627886266077*10**-8,
                       0.604374640201265*10**-3,-0.225132933900136*10**-15,  0.610916973582981*10**-11,
                      -0.303063908043404*10**-6,-0.137796070798409*10**-4,  -0.919296736666106*10**-3,
                       0.639288223132545*10**-9, 0.753259479898699*10**-6,  -0.400321478682929*10**-12,
                       0.756140294351614*10**-8,-0.912082054034891*10**-11, -0.237612381140539*10**-7,
                       0.269586010591874*10**-4,-0.732828135157839*10**-10,  0.241995578306660*10**-9,
                      -0.405735532730322*10**-3, 0.189424143498011*10**-9,  -0.486632965074563*10**-9,  
                       0],
                     
                     [ 0.412209020652996*10**-4, -0.114987238280587*10**7,   0.948180885032080*10**10,
                      -0.195788865718971*10**18,  0.496250704871300*10**25, -0.105549884548496*10**29,
                      -0.758642165988278*10**12, -0.922172769596101*10**23,  0.725379072059348*10**30,
                      -0.617718249205859*10**2,   0.107555033344858*10**5,  -0.379545802336487*10**8,
                       0.228646846221831*10**12, -0.499741093010619*10**7,  -0.280214310054101*10**31,
                       0.104915406769586*10**7,   0.613754229168619*10**28,  0.802056715528378*10**32,
                      -0.298617819828065*10**8,  -0.910782540134681*10**2,   0.135033227281565*10**6,
                      -0.712949383408211*10**19, -0.104578785289542*10**37,  0.304331584444093*10**2,
                       0.593250797959445*10**10, -0.364174062110798*10**28,  0.921791403532461,
                      -0.337693609657471,        -0.724644143758508*10**2,  -0.110480239272601,
                       0.536516031875059*10,     -0.291441872156205*10**4,   0.616338176535305*10**40,
                      -0.120889175861180*10**39,  0.818396024524612*10**23,  0.940781944835829*10**9,
                      -0.367279669545448*10**5,  -0.837513931798655*10**16,
                       0,  0,  0,  0,  0],
                     
                     [ 0.561379678887577*10**-1,  0.774135421587083*10**10,  0.111482975877938*10**-8,
                      -0.143987128208183*10**-2,  0.193696558764920*10**4,  -0.605971823585005*10**9,
                       0.171951568124337*10**14, -0.185461154985145*10**17,  0.387851168078010*10**-16,
                      -0.395464327846105*10**-13,-0.170875935679023*10**3,  -0.212010620701220*10**4,
                       0.177683337348191*10**8,   0.110177443629575*10**2,  -0.234396091693313*10**6,
                      -0.656174421999594*10**7,   0.156362212977396*10**-4, -0.212946257021400*10,
                       0.135249306374858*10**2,   0.177189164145813,         0.139499167345464*10**4,
                      -0.703670932036388*10**-2, -0.152011044389648,         0.981916922991113*10**-4,
                       0.147199658618076*10**-2,  0.202618487025578*10**2,   0.899345518944240,
                      -0.211346402240858,         0.249971752957491*10**2,  
                       0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     
                     [ 0.106905684359136*10,     -0.148620857922333*10,      0.259862256980408*10**15,
                      -0.446352055678749*10**-11,-0.566620757170032*10**-6, -0.235302885736849*10**-2,
                      -0.269226321968839,         0.922024992944392*10,      0.357633505503772*10**-11,
                      -0.173942565562222*10**2,   0.700681785556229*10**-5, -0.267050351075768*10**-3,
                      -0.231779669675624*10,     -0.753533046979752*10**-12, 0.481337131452891*10,
                      -0.223286270422356*10**22, -0.118746004987383*10**-4,  0.646412934136496*10**-2,
                      -0.410588536330937*10**-9,  0.422739537057241*10**20,  0.313698180473812*10**-12,
                       0.164395334345040*10**-23,-0.339823323754373*10**-5, -0.135268639905021*10**-1,
                      -0.723252514211625*10**-14, 0.184386437538366*10**-8, -0.463959533752385*10**-1,
                      -0.992263100376750*10**14,  0.688169154439335*10**-16,-0.222620998452197*10**-10,
                      -0.540843018624083*10**-7,  0.345570606200257*10**-2,  0.422275800304086*10**11,
                      -0.126974478770487*10**-14, 0.927237985153679*10**-9,  0.612670812016489*10**-13,
                      -0.722693924063497*10**-11,-0.383669502636822*10**-3,  0.374684572410204*10**-3,
                      -0.931976897511086*10**5,  -0.247690616026922*10**-1,  0.658110546759474*10**2,
                       0],
                     
                     [-0.111371317395540*10**-3,  0.100342892423685*10,      0.530615581928979*10,
                       0.179058760078792*10**-5, -0.728541958464774*10**-3, -0.187576133371704*10**2,
                       0.199060874071849*10**-2,  0.243574755377290*10**2,  -0.177040785499444*10**-3,
                      -0.259680385227130*10**-2, -0.198704578406823*10**3,   0.738627790224287*10**-4,
                      -0.236264692844138*10**-2, -0.161023121314333*10,      0.622322971786473*10**4,
                      -0.960754116701669*10**-8, -0.510572269720488*10**-10, 0.767373781404211*10**-2,
                       0.663855469485254*10**-14,-0.717590735526745*10**-9,  0.146564542926508*10**-4,
                       0.309029474277013*10**-11,-0.464216300971708*10**-15,-0.390499637961161*10**-13,
                      -0.236716126781431*10**-9,  0.454652854268717*10**-11,-0.422271787482497*10**-2,
                       0.283911742354706*10**-10, 0.270929002720228*10,  
                       0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],  
                     
                     [-0.401215699576099*10**9,   0.484501478318406*10**11,  0.394721471363678*10**-14,
                       0.372629967374147*10**5,  -0.369794374168666*10**-29,-0.380436407012452*10**-14,
                       0.475361629970233*10**-6, -0.879148916140706*10**-3,  0.844317863844331,
                       0.122433162656600*10**2,  -0.104529634830279*10**3,   0.589702771277429*10**3,
                      -0.291026851164444*10**14,  0.170343072841850*10**-5, -0.277617606975748*10**-3,
                      -0.344709605486686*10,      0.221333862447095*10**2,  -0.194646110037079*10**3,
                       0.808354639772825*10**-15,-0.180845209145470*10**-10,-0.696664158132412*10**-5,
                      -0.181057560300994*10**-2,  0.255830298579027*10,      0.328913873658481*10**4,
                      -0.173270241249904*10**-18,-0.661876792558034*10**-6, -0.395688923421250*10**-2,
                       0.604203299819132*10**-17,-0.400879935920517*10**-13, 0.160751107464958*10**-8,
                       0.383719409025556*10**-4, -0.649565446702457*10**-14,-0.149095328506000*10**-11, 
                       0.541449377329581*10**-8, 
                       0,  0,  0,  0,  0,  0,  0,  0,  0],
                     
                     [ 0.260702058647537*10**10, -0.188277213604704*10**15,  0.554923870289667*10**19,
                      -0.758966946387758*10**23,  0.413865186848908*10**27, -0.815038000738060*10**12,
                      -0.381458260489955*10**33, -0.123239564600519*10**-1,  0.226095631437174*10**8,
                      -0.495017809506720*10**12,  0.529482996422863*10**16, -0.444359478746295*10**23,
                       0.521635864527315*10**35, -0.487095672740742*10**55, -0.714430209937547*10**6,
                       0.127868634615495,        -0.100752127917598*10**2,   0.777451437960990*10**7,
                      -0.108105480796471*10**25, -0.357578581169659*10**-5, -0.212857169423484*10,
                       0.270706111085238*10**30, -0.695953622348829*10**33,  0.110609027472280,
                       0.721559163361354*10**2,  -0.306367307532219*10**15,  0.265839618885530*10**-4,
                       0.253392392889754*10**-1, -0.214443041836579*10**3,   0.937846601489667,
                       0.223184043101700*10,      0.338401222509191*10**2,   0.494237237179718*10**21,
                      -0.198068404154428,        -0.141415349881140*10**31, -0.993862421613651*10**2,
                       0.125070534142731*10**3,  -0.996473529004439*10**3,   0.473137909872765*10**5,
                       0.116662121219322*10**33, -0.315874976271533*10**16, -0.445703369196945*10**33,
                       0.642794932373694*10**33],
                     
                     [ 0.811384363481847,        -0.568199310990094*10**4,  -0.178657198172556*10**11,
                       0.795537657613427*10**32, -0.814568209346872*10**5,  -0.659774567602874*10**8,
                      -0.152861148659302*10**11, -0.560165667510446*10**12,  0.458384828593949*10**6,
                      -0.385754000383848*10**14,  0.453735800004273*10**8,   0.939454935735563*10**12,
                       0.266572856432938*10**28, -0.547578313899097*10**10,  0.200725701112386*10**15,
                       0.185007245563239*10**13,  0.185135446828337*10**9,  -0.170451090076385*10**12,
                       0.157890366037614*10**15, -0.202530509748774*10**16,  0.368193926183570*10**60,
                       0.170215539458936*10**18,  0.639234909918741*10**42, -0.821698160721956*10**15,
                      -0.795260241872306*10**24,  0.233415869478510*10**18, -0.600079934586803*10**23,
                       0.594584382273384*10**25,  0.189461279349492*10**40, -0.810093428842645*10**46,
                       0.188813911076809*10**22,  0.111052244098768*10**36,  0.291133958602503*10**46,
                      -0.329421923951460*10**22, -0.137570282536696*10**26,  0.181508996303902*10**28,
                      -0.346865122768353*10**30, -0.211961148774260*10**38, -0.128617899887675*10**49,
                       0.479817895699239*10**65, 
                       0,  0,  0],
                     
                     [ 0.280967799943151*10**-38, 0.614869006573609*10**-30, 0.582238667048942*10**-27,
                       0.390628369238462*10**-22, 0.821445758255119*10**-20, 0.402137961842776*10**-14,
                       0.651718171878301*10**-12,-0.211773355803058*10**-7,  0.264953354380072*10**-2,
                      -0.135031446451331*10**-31,-0.607246643970893*10**-23,-0.402352115234494*10**-18,
                      -0.744938506925544*10**-16, 0.189917206526237*10**-12, 0.364975183508473*10**-5,
                       0.177274872361946*10**-25,-0.334952758812999*10**-18,-0.421537726098389*10**-8,
                      -0.391048167929649*10**-1,  0.541276911564176*10**-13, 0.705412100773699*10**-11,
                       0.258585887897486*10**-8, -0.493111362030162*10**-10,-0.158649699894543*10**-5,
                      -0.525037427886100,         0.220019901729615*10**-2, -0.643064132636925*10**-2,
                       0.629154149015048*10**2,   0.135147318617061*10**3,   0.240560808321713*10**-6,
                      -0.890763306701305*10**-3, -0.440209599407714*10**4,  -0.302807107747776*10**3,
                       0.159158748314599*10**4,   0.232534272709876*10**6,  -0.792681207132600*10**6,
                      -0.869871364662769*10**11,  0.354542769185671*10**12,  0.400849240129329*10**15,
                       0,  0,  0,  0],
                     
                     [ 0.128746023979718*10**-34,
                      -0.735234770382342*10**-11, 0.289078692149150*10**-2,  0.244482731907223,
                       0.141733492030985*10**-23,-0.354533853059476*10**-28,-0.594539202901431*10**-17,
                      -0.585188401782779*10**-8,  0.201377325411803*10**-5,  0.138647388209306*10,
                      -0.173959365084772*10**-4,  0.137680878349369*10**-2,  0.814897605805513*10**-14,
                       0.425596631351839*10**-25,-0.387449113787755*10**-17, 0.139814747930240*10**-12,
                      -0.171849638951521*10**-2,  0.641890529513296*10**-21, 0.118960578072018*10**-10,
                      -0.155282762571611*10**-17, 0.233907907347507*10**-7, -0.174093247766213*10**-12,
                       0.377682649089149*10**-8, -0.516720236575302*10**-10, 
                       0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     
                     [-0.982825342010366*10**-4,  0.105145700850612*10,      0.116033094095084*10**3,
                       0.324664750281543*10**4,  -0.123592348610137*10**4,  -0.561403450013495*10**-1,
                       0.856677401640869*10**-7,  0.236313425393924*10**3,   0.972503292350109*10**-2,
                      -0.103001994531927*10,     -0.149653706199162*10**-8, -0.215743778861592*10**-4,
                      -0.834452198291445*10,      0.586602660564988,         0.343480022104968*10**-25,
                       0.816256095947021*10**-5,  0.294985697916798*10**-2,  0.711730466276584*10**-16,
                       0.400954763806941*10**-9,  0.107766027032853*10**2,  -0.409449599138182*10**-6,
                      -0.729121307758902*10**-5,  0.677107970938909*10**-8,  0.602745973022975*10**-7,
                      -0.382323011855257*10**-10, 0.179946628317437*10**-2, -0.345042834640005*10**-3,
                       0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     
                     [-0.820433843259950*10**5,   0.473271518461586*10**11, -0.805950021005413*10**-1,
                       0.328600025435980*10**2,  -0.356617029982490*10**4,  -0.172985781433335*10**10,
                       0.351769232729192*10**8,  -0.775489259985144*10**6,   0.710346691966018*10**-4,
                       0.993499883820274*10**5,  -0.642094171904570,        -0.612842816820083*10**4,
                       0.232808472983776*10**3,  -0.142808220416837*10**-4, -0.643596060678456*10**-2,
                      -0.428577227475614*10,      0.225689939161918*10**4,   0.100355651721510*10**-2,
                       0.333491455143516,         0.109697576888873*10,      0.961917379376452,
                      -0.838165632204598*10**-1,  0.247795908411492*10,     -0.319114969006533*10**4,  
                       0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     
                     [ 0.144165955660863*10**-2, -0.701438599628258*10**13, -0.830946716459219*10**-16,
                       0.261975135368109,         0.393097214706245*10**3,  -0.104334030654021*10**5,
                       0.490112654154211*10**9,  -0.147104222772069*10**-3,  0.103602748043408*10,
                       0.305308890065089*10,     -0.399745276971264*10**7,   0.569233719593750*10**-11,
                      -0.464923504407778*10**-1, -0.535400396512906*10**-17, 0.399988795693162*10**-12,
                      -0.536479560201811*10**-6,  0.159536722411202*10**-1,  0.270303248860217*10**-14,
                       0.244247453858506*10**-7, -0.983430636716454*10**-5,  0.663513144224454*10**-1,
                      -0.993456957845006*10,      0.546491323528491*10**3,  -0.143365406393758*10**5,
                       0.150764974125511*10**6,  -0.337209709340105*10**-9,  0.377501980025469*10**-8, 
                       0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     
                     [-0.532466612140254*10**23,  0.100415480000824*10**32, -0.191540001821367*10**30,
                       0.105618377808847*10**17,  0.202281884477061*10**59,  0.884585472596134*10**8,
                       0.166540181638363*10**23, -0.313563197669111*10**6,  -0.185662327545324*10**54,
                      -0.624942093918942*10**-1, -0.504160724132590*10**10,  0.187514491833092*10**5,
                       0.121399979993217*10**-2,  0.188317043049455*10,     -0.167073503962060*10**4,
                       0.965961650599775,         0.294885696802488*10,     -0.653915627346115*10**5,
                       0.604012200163444*10**50, -0.198339358557937,        -0.175984090163501*10**58,
                       0.356314881403987*10,     -0.575991255144384*10**3,   0.456213415338071*10**5,
                      -0.109174044987829*10**8,   0.437796099975134*10**34, -0.616552611135792*10**46,
                       0.193568768917797*10**10,  0.950898170425042*10**54, 
                       0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     
                     [ 0.155287249586268*10,      0.664235115009031*10,     -0.289366236727210*10**4,
                      -0.385923202309848*10**13, -0.291002915783761*10,     -0.829088246858083*10**12,
                       0.176814899675218*10,     -0.534686695713469*10**9,   0.160464608687834*10**18,
                       0.196435366560186*10**6,   0.156637427541729*10**13, -0.178154560260006*10,
                      -0.229746237623692*10**16,  0.385659001648006*10**8,   0.110554446790543*10**10,
                      -0.677073830687349*10**14, -0.327910592086523*10**31, -0.341552040860644*10**51,
                      -0.527251339709047*10**21,  0.245375640937055*10**24, -0.168776617209269*10**27,  
                       0.358958955867578*10**29, -0.656475280339411*10**36,  0.355286045512301*10**39,
                       0.569021454413270*10**58, -0.700584546433113*10**48, -0.705772623326374*10**65,
                       0.166861176200148*10**53, -0.300475129680486*10**61, -0.668481295196808*10**51,
                       0.428432338620678*10**69, -0.444227367758304*10**72, -0.281396013562745*10**77, 
                       0,  0,  0,  0,  0,  0,  0,  0,  0,  0],
                     
                     [ 0.122088349258355*10**18, 0.104216468608488*10**10, -0.882666931564652*10**16,
                       0.259929510849499*10**20, 0.222612779142211*10**15, -0.878473585050085*10**18,
                      -0.314432577551552*10**22, -0.216934916996285*10**13, 0.159079648196849*10**21,
                      -0.339567617303423*10**3, 0.884387651337836*10**13, -0.843405926846418*10**21,
                       0.114178193518022*10**2, -0.122708229235641*10**-3, -0.106201671767107*10**3,
                       0.903443213959313*10**25, -0.693996270370852*10**28, 0.648916718965575*10**-8,
                       0.718957567127851*10**4, 0.105581745346187*10**-2, -0.651903203602581*10**15,
                      -0.160116813274676*10**25, -0.510254294237837*10**-8, -0.152355388953402,
                       0.677143292290144*10**12, 0.276378438378930*10**15, 0.116862983141686*10**-1,
                      -0.301426947980171*10**14, 0.169719813884840*10**-7, 0.104674840020929*10**27,
                      -0.108016904560140*10**5, -0.990623601934295*10**-12, 0.536116483602738*10**7,
                       0.226145963747881*10**22, -0.488731565776210*10**-9, 0.151001548880670*10**-4,
                      -0.227700464643920*10**5, -0.781754507698846*10**28,
                       0,  0,  0,  0,  0],

                     [-0.415652812061591*10**-54, 0.177441742924043*10**-60, -0.357078668203377*10**-54,
                       0.359252213604114*10**-25, -0.259123736380269*10**2, 0.594619766193460*10**5,
                      -0.624184007103158*10**11, 0.313080299915944*10**17, 0.105006446192036*10**-8,
                      -0.192824336984852*10**-5, 0.654144373749937*10**6, 0.513117462865044*10**13,
                      -0.697595750347391*10**19, -0.103977184454767*10**29, 0.119563135540666*10**-47,
                      -0.436677034051655*10**-41, 0.926990036530639*10**-29, 0.587793105620748*10**21,
                       0.280375725094731*10**-17, -0.192359972440634*10**23, 0.742705723302738*10**27,
                      -0.517429682450605*10**2, 0.820612048645469*10**7, -0.188214882341448*10**-8,
                       0.184587261114837*10**-1, -0.135830407782663*10**-5, -0.723681885626348*10**17,
                      -0.223449194054124*10**27, -0.111526741826431*10**-34, 0.276032601145151*10**-28,
                       0.134856491567853*10**15, 0.652440293345860*10**-9, 0.510655119774360*10**17,
                      -0.468138358908732*10**32, -0.760667491183279*10**16, -0.417247986986821*10**-18,
                       0.312545677756104*10**14, -0.100375333864186*10**15, 0.247761392329058*10**27,
                       0,  0,  0,  0],

                      [-0.586219133817016*10**-7, -0.894460355005526*10**11, 0.531168037519774*10**-30,
                        0.109892402329239, -0.575368389425212*10**-1, 0.228276853990249*10**5,
                       -0.158548609655002*10**19, 0.329865748576503*10**-27, -0.634987981190669*10**-24,
                        0.615762068640611*10**-8, -0.961109240985747*10**8, -0.406274286652625*10**-44,
                       -0.471103725498077*10**-12, 0.725937724828145, 0.187768525763682*10**-38,
                       -0.103308436323771*10**4, -0.662552816342168*10**-1, 0.579514041765710*10**3,
                        0.237416732616644*10**-26, 0.271700235739893*10**-14, -0.907886213483600*10**2,
                       -0.171242509570207*10**-36, 0.156792067854621*10**3, 0.923261357901470,
                       -0.597865988422577*10**1, 0.321988767636389*10**7, -0.399441390042203*10**-29,
                        0.493429086046981*10**-7, 0.812036983370565*10**-19, -0.207610284654137*10**-11,
                       -0.340821291419719*10**-6, 0.542000573372233*10**-17, -0.856711586510214*10**-12,
                        0.266170454405981*10**-13, 0.858133791857099*10**-5,
                        0,  0,  0,  0,  0,  0,  0,  0],
    
                      [ 0.377373741298151*10**19,   -0.507100883722913*10**13,  -0.103363225598860*10**16,
                        0.184790814320773*10**-5,   -0.924729378390945*10**-3,  -0.425999562292738*10**24,
                       -0.462307771873973*10**-12,   0.107319065855767*10**22,   0.648662492280682*10**11,
                        0.244200600688281*10,       -0.851535733484258*10**10,   0.169894481433592*10**22,
                        0.215780222509020*10**-26,  -0.320850551367334,         -0.382642448458610*10**17,
                       -0.275386077674421*10**-28,  -0.563199253391666*10**6,   -0.326068646279314*10**21,
                        0.397949001553184*10**14,    0.100824008584757*10**-6,   0.162234569738433*10**5,
                       -0.432355225319745*10**11,   -0.592874245598610*10**12,   0.133061647281106*10,
                        0.157338197797544*10**7,     0.258189614270853*10**14,   0.262413209706358*10**25,
                       -0.920011937431142*10**-1,    0.220213765905426*10**-2,  -0.110433759109547*10**2,
                        0.847004870612087*10**7,    -0.592910695762536*10**9,   -0.183027173269660*10**-4,
                        0.181339603516302,          -0.119228759669889*10**4,    0.430867658061468*10**7,
                        0,  0,  0,  0,  0,  0,  0],

                      [-0.525597995024633*10**-9, 0.583441305228407*10**4, -0.134778968457925*10**17,
                        0.118973500934212*10**26, -0.159096490904708*10**27, -0.315839902302021*10**-6,
                        0.496212197158239*10**3, 0.327777227273171*10**19, -0.527114657850696*10**22,
                        0.210017506281863*10**-16, 0.705106224399834*10**21, -0.266713136106469*10**31,
                       -0.145370512554562*10**-7, 0.149333917053130*10**28, -0.149795620287641*10**8,
                       -0.381881906271100*10**16, 0.724660165585797*10**-4, -0.937808169550193*10**14,
                        0.514411468376383*10**10, -0.828198594040141*10**5,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0],

                      [ 0.244007892290650*10**-10, -0.463057430331242*10**7, 0.728803274777712*10**10,
                        0.327776302858856*10**16, -0.110598170118409*10**10, -0.323899915729957*10**13,
                        0.923814007023245*10**16, 0.842250080413712*10**-12, 0.663221436245506*10**12,
                       -0.167170186672139*10**15, 0.253749358701391*10**4, -0.819731559610523*10**-20,
                        0.328380587890663*10**12, -0.625004791171543*10**8, 0.803197957462023*10**21,
                       -0.204397011338353*10**-10, -0.378391047055938*10**4, 0.972876545938620*10**-2,
                        0.154355721681459*10**2, -0.373962862928643*10**4, -0.682859011374572*10**11,
                       -0.248488015614543*10**-3, 0.394536049497068*10**7,
                        0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0]])

    region_boundaries_dict = {
        "a": 0,
        "b": 1,
        "c": 2,
        "d": 3,
        "e": 4,
        "f": 5,
        "g": 6,
        "h": 7,
        "i": 8,
        "j": 9,
        "k": 10,
        "l": 11,
        "m": 12,
        "n": 13,
        "o": 14,
        "p": 15,
        "q": 16,
        "r": 17,
        "s": 18,
        "t": 19,
        "u": 20,
        "v": 21,
        "w": 22,
        "x": 23,
        "y": 24,
        "z": 25}  
    
    pi = p / x_star[region_boundaries_dict[region],1]
    teta = T / x_star[region_boundaries_dict[region],2] 

    a = x_star[region_boundaries_dict[region],4]
    b = x_star[region_boundaries_dict[region],5]
    c = x_star[region_boundaries_dict[region],6]
    d = x_star[region_boundaries_dict[region],7]
    e = x_star[region_boundaries_dict[region],8] 
    
    if region == 'n':
        # Eq. 5 for region n
        exponent = 0
        for i,j,n in zip(i_a1[region_boundaries_dict[region],:], 
                         j_a1[region_boundaries_dict[region],:],
                         n_a1[region_boundaries_dict[region],:]):
            exponent += n*((pi-a)**i)*((teta-b)**j)
        
        v = np.exp(exponent) * x_star[region_boundaries_dict[region],0] 
        
    else:
        # All other regions, eq. 4
        x = 0
        for i,j,n in zip(i_a1[region_boundaries_dict[region],:], 
                         j_a1[region_boundaries_dict[region],:],
                         n_a1[region_boundaries_dict[region],:]):
            x += n*(((pi-a)**c)**i)*(((teta-b)**d)**j)

        v = (x**e) * x_star[region_boundaries_dict[region],0] 
    
    return v
        
if __name__ == "__main__":
    main()
